<UserControl x:Class="ChatGPTExtension.GptToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0" xmlns:controls="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             PreviewKeyDown="UserControl_PreviewKeyDown"
             Name="ChatGPTWindowControl"
             >
    <Grid>
        <!-- Define styles for buttons and checkbox -->
        <Grid.Resources>
            <!-- Style for the buttons -->
            <Style TargetType="Button" x:Key="CustomButtonStyle">
                <Setter Property="Background" Value="#343541"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#40414F"/>
                                    <!-- Darkened color for hover -->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ToggleSwitch Style for CheckBox -->
            <Style TargetType="CheckBox" x:Key="CustomCheckBoxStyle">
                <Setter Property="Margin" Value="0,2,0,2"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Toggle switch part -->
                                <Border Grid.Column="0" Background="#343541" BorderBrush="#343541" BorderThickness="1" CornerRadius="8" Height="18" Width="36" VerticalAlignment="Center">
                                    <Grid>
                                        <Rectangle x:Name="BackgroundRect" Fill="#343541" RadiusX="8" RadiusY="8" />
                                        <Ellipse x:Name="SwitchCircle" Fill="White" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="1"/>
                                    </Grid>
                                </Border>

                                <!-- Text part -->
                                <TextBlock Grid.Column="1" Text="Enable Copy Code" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="White"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="BackgroundRect" Property="Fill" Value="#4CC2FF"/>
                                    <Setter TargetName="SwitchCircle" Property="HorizontalAlignment" Value="Right"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        
        <Button Grid.Row="0" Grid.Column="3" Content="▼" Height="30" FontFamily="Segoe UI Emoji" Style="{StaticResource CustomButtonStyle}" >

            <!-- Embed the context menu directly within the button -->
            <Button.ContextMenu>
                <ContextMenu x:Name="CodeActionsContextMenu" FontSize="15">
                    <!-- Your MenuItems go here -->
                </ContextMenu>
            </Button.ContextMenu>
            
            <!-- Open the context menu on left click -->
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>

        <!-- The button to trigger the code transfer from VS.NET to GPT -->
        <Button Grid.Row="0" Grid.Column="0" Content="VS.NET to GPT ➡️" Click="OnSendCodeButtonClick" Tag="" Height="30" FontFamily="Segoe UI Emoji" Style="{StaticResource CustomButtonStyle}" ToolTip="Transfer selected code from VS.NET to GPT"/>

        <!-- Fix Code from VS.NET to GPT -->
        <Button Grid.Row="0" Grid.Column="1" Content="Fix Code in GPT ➡️" Click="OnSendCodeButtonClick" Tag="Fix {languageCode} code below:" Height="30" FontFamily="Segoe UI Emoji" Style="{StaticResource CustomButtonStyle}"  ToolTip="Transfer selected code from GPT to VS.NET"/>

        <!-- Improve Code from VS.NET to GPT -->
        <Button Grid.Row="0" Grid.Column="2" Content="Improve Code in GPT ➡️" Click="OnSendCodeButtonClick" Tag="Improve {languageCode} code below:" Height="30" FontFamily="Segoe UI Emoji" Style="{StaticResource CustomButtonStyle}"  ToolTip="Refactor selected code from VS.NET in GPT" />

        <!-- The button to trigger the code transfer from GPT to VS.NET -->
        <Button Grid.Row="1" Grid.ColumnSpan="2" Content="⬅️ GPT to VS.NET" Click="OnReceiveCodeButtonClick" Height="30" FontFamily="Segoe UI Emoji" Style="{StaticResource CustomButtonStyle}"  ToolTip="Transfer selected code from GPT to VS.NET"/>

        <!-- The button to trigger the complete code action in GPT -->
        <Button Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Content="Complete Code" Click="OnCompleteCodeButtonClick" Height="30" FontFamily="Segoe UI Emoji" Style="{StaticResource CustomButtonStyle}"  ToolTip="Ask GPT to provide full complete code"/>
        
        <!-- The checkbox to "Enable Copy Code" -->
        <CheckBox Grid.Row="2" Grid.ColumnSpan="4" Style="{StaticResource CustomCheckBoxStyle}" HorizontalAlignment="Right" Name="EnableCopyCodeCheckBox" Click="EnableCopyCodeCheckBox_Click" IsChecked="True"  ToolTip="Enable sending code from GPT to VS.NET when Copy code button is clicked in GPT" />

        <!-- The WebView2 control with Chat GPT -->
        <controls:WebView2 Grid.Row="3" Grid.ColumnSpan="4" Name="webView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

    </Grid>

</UserControl>
